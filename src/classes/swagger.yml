paths:
  /classes:
    get:
      summary: Get Classes of the authenticated user
      tags:
        - classes
      responses:
        '200':
          description: Authenticated User's Classes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        $import: swagger/responses.yml
    post:
      summary: Create a new class
      tags:
        - classes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - shortName
                - name
              properties:
                shortName:
                  type: string
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: User Created
        '400':
          description: Invalid Data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrors'
        $import: swagger/responses.yml
  /classes/{class}:
    get:
      summary: Get a class
      tags:
        - classes
      parameters:
        - in: path
          name: class
          schema:
            type: string
          required: true
          description: Class short name
      responses:
        '200':
          description: Class data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '404':
          description: Class doesn't exist or the user isn't a member of the class
        $import: swagger/responses.yml
    put:
      summary: Update a class
      tags:
        - classes
      parameters:
        - in: path
          name: class
          schema:
            type: string
          required: true
          description: Class short name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - shortName
                - name
              properties:
                shortName:
                  type: string
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Class updated successfully
        '400':
          description: Invalid Data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrors'
        '404':
          description: Class doesn't exist or the user isn't a member of the class
        $import: swagger/responses.yml
    delete:
      summary: Delete a class
      tags:
        - classes
      parameters:
        - in: path
          name: class
          schema:
            type: string
          required: true
          description: Class short name
      responses:
        '200':
          description: Class deleted  
        '400':
          description: User is not the owner of the class
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrors'
        '404':
          description: Class doesn't exist or the user isn't a member of the class
        $import: swagger/responses.yml
  /classes/{class}/avatar:
    put:
      summary: Update a class's avatar
      tags:
        - classes
      parameters:
        - in: path
          name: class
          schema:
            type: string
          required: true
          description: Class short name
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: base64
      responses:
        '200':
          description: Avatar updated
        '400':
          description: Invalid file upload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrors'
        $import: swagger/responses.yml
  /classes/{class}/short-name:
    get:
      summary: Check if a class exists by it's short name
      tags:
        - classes
      parameters:
        - in: path
          name: class
          schema:
            type: string
          required: true
          description: Class short name
      responses:
        '200':
          description: Class exists
        '404':
          description: Class doesn't exist
        $import: swagger/responses.yml
  /classes/{class}/members:
    get:
      summary: Get all members of a class
      tags:
        - classes
      parameters:
        - in: path
          name: class
          schema:
            type: string
          required: true
          description: Class short name
      responses:
        '200':
          description: Array of members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: Class doesn't exist or the user isn't a member of the class
        $import: swagger/responses.yml
  /classes/{class}/members/{user}:
    delete:
      summary: Remove a member from a class
      tags:
        - classes
      parameters:
        - in: path
          name: class
          schema:
            type: string
          required: true
          description: Class short name
        - in: path
          name: user
          schema:
            type: string
            format: uuid
          required: true
          description: UUID of user
      responses:
        '200':
          description: Member removed successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrors'
        '404':
          description: Class doesn't exist or the user isn't a member of the class
        $import: swagger/responses.yml
  /classes/{class}/invites:
    post:
      summary: Create a new class invite
      tags:
        - classes
      parameters:
        - in: path
          name: class
          schema:
            type: string
          required: true
          description: Class short name
      responses:
        '201':
          description: Invite created, invite link returned
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: User is not the owner of the class
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrors'
        '404':
          description: Class doesn't exist or the user isn't a member of the class
        $import: swagger/responses.yml
  /invites/{invite}:
    get:
      summary: Get invite details
      tags:
        - classes
      parameters:
        - in: path
          name: invite
          schema:
            type: string
            format: uuid
          required: true
          description: Invite UUID
      responses:
        '200':
          description: Invite data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
        '400':
          description: Invite UUID is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrors'
        '404':
          description: Invite doesn't exist or is expired
        $import: swagger/responses.yml
    post:
      summary: Accept an invite
      tags:
        - classes
      parameters:
        - in: path
          name: invite
          schema:
            type: string
            format: uuid
          required: true
          description: Invite UUID
      responses:
        '200':
          description: Invite successfully accepted
        '400':
          description: Invite UUID is not valid
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ResponseErrors'
        '404':
          description: invite doesn't exist or is expired
        $import: swagger/responses.yml
components:
  schemas:
    Class:
      type: object
      required:
        - shortName
        - ownerUUID
        - name
        - avatarUrl
        - isOwner
        - members
        - assignments
      properties:
        shortName:
          type: string
          description: Unique identifier of class
        ownerUUID:
          type: string
          description: UUID of class owner
        name:
          type: string
        description:
          type: string
        avatarUrl:
          type: string
        isOwner:
          type: boolean
          description: True if the authenticated user is the owner of the class
        members:
          type: number
        assignments:
          type: number
    Invite:
      type: object
      required:
        - uuid
        - inviteUrl
        - expiryTime
        - class
        - classShortName
        - className
      properties:
        uuid:
          type: string
          format: uuid
          description: Invite UUID
        inviteUrl:
          type: string
        expiryTime:
          type: string
          format: date-time
          description: Timestamp for when the invite will expire
        class:
          type: object
          required:
            - shortName
            - name
            - avatarUrl
            - members
            - assignments
          properties:
            shortName:
              type: string
            name:
              type: string
            avatarUrl:
              type: string
            members:
              type: number
            assignments:
              type: number
            isMember:
              type: boolean